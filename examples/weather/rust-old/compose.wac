// Composition for weather handler with null components
package example:weather-app@1.0.0;

// Instantiate components using package names (will be resolved via -d flags)
// The ... will automatically import what each component needs from the registry
let weather = new example:weather { ... };
let nullresources = new fastertools:null-resources { ... };
let nullprompts = new fastertools:null-prompts { ... };

// Instantiate the server, let it implicitly import what else it needs
let server = new wasmcp:server {
    // Use weather handler's core and tool implementations
    "fastertools:mcp/core@0.1.1": weather["fastertools:mcp/core@0.1.1"],
    "fastertools:mcp/tool-handler@0.1.1": weather["fastertools:mcp/tool-handler@0.1.1"],
    
    // Use null implementations for resources and prompts
    "fastertools:mcp/resource-handler@0.1.1": nullresources["fastertools:mcp/resource-handler@0.1.1"],
    "fastertools:mcp/prompt-handler@0.1.1": nullprompts["fastertools:mcp/prompt-handler@0.1.1"],
    
    // Let the server implicitly import remaining dependencies (types, session, etc.)
    ...
};

// Export the server's HTTP handler so it can be run
export server["wasi:http/incoming-handler@0.2.0"];