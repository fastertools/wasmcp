// Composition for rust handler with null components
package rust:app@1.0.0;

// Instantiate components using package names (resolved via -d flags)
// The ... syntax creates implicit imports - WAC will automatically 
// import what each component needs from the registry
let handler = new rust:handler { ... };
let nullresources = new fastertools:null-resources { ... };
let nullprompts = new fastertools:null-prompts { ... };

// Instantiate the server and wire the handlers
let server = new fastertools:wasmcp-server {
    // Use our handler's core and tool implementations
    "fastertools:mcp/core@0.1.1": handler["fastertools:mcp/core@0.1.1"],
    "fastertools:mcp/tool-handler@0.1.1": handler["fastertools:mcp/tool-handler@0.1.1"],
    
    // Use null implementations for resources and prompts
    // Replace these with real implementations if your handler provides them
    "fastertools:mcp/resource-handler@0.1.1": nullresources["fastertools:mcp/resource-handler@0.1.1"],
    "fastertools:mcp/prompt-handler@0.1.1": nullprompts["fastertools:mcp/prompt-handler@0.1.1"],
    
    // Let the server implicitly import remaining dependencies
    ...
};

// Export the server's HTTP handler so it can be run
export server["wasi:http/incoming-handler@0.2.0"];