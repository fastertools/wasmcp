"""
Dynamic discovery and loading of WASI HTTP bindings.
"""

import os
import sys
from typing import Any, Optional


class WasiBindings:
    """Lazy loader for WASI bindings generated by componentize-py."""
    
    def __init__(self):
        self._loaded = False
        self._http_types = None
        self._outgoing_handler = None
        self._poll = None
        self._streams = None
        self._io_error = None
        
    def _ensure_loaded(self):
        """Dynamically discover and load WASI bindings."""
        if self._loaded:
            return
            
        # First try the exact pattern our weather example uses
        try:
            from wit_world.imports import wasi_http_types
            from wit_world.imports import outgoing_handler
            from wit_world.imports import poll
            from wit_world.imports import streams
            
            self._http_types = wasi_http_types
            self._outgoing_handler = outgoing_handler
            self._poll = poll
            self._streams = streams
            self._loaded = True
            return
        except ImportError as e:
            # Store the error for debugging
            import_error = str(e)
            
        # Try common module patterns used by componentize-py
        search_patterns = [
            'wit_world.imports',
            'app.imports', 
            'component.imports',
            'bindings.imports',
            'wit.imports',
        ]
        
        for pattern in search_patterns:
            try:
                imports = __import__(pattern, fromlist=[''])
                
                # Try to get the WASI modules
                if hasattr(imports, 'wasi'):
                    wasi = imports.wasi
                    if hasattr(wasi, 'http'):
                        self._http_types = wasi.http.types
                        self._outgoing_handler = wasi.http.outgoing_handler
                    if hasattr(wasi, 'io'):
                        self._poll = wasi.io.poll
                        self._streams = wasi.io.streams
                        self._io_error = wasi.io.error
                else:
                    # Direct attribute access pattern
                    self._http_types = getattr(imports, 'wasi_http_types', None)
                    self._outgoing_handler = getattr(imports, 'outgoing_handler', None)
                    self._poll = getattr(imports, 'poll', None)
                    self._streams = getattr(imports, 'streams', None)
                    self._io_error = getattr(imports, 'error', None)
                
                if all([self._http_types, self._outgoing_handler, self._poll, self._streams]):
                    self._loaded = True
                    return
                    
            except (ImportError, AttributeError):
                continue
        
        # Check for custom module via environment variable
        custom_module = os.environ.get('WASI_HTTP_BINDINGS_MODULE')
        if custom_module:
            try:
                module = __import__(custom_module, fromlist=[''])
                self._http_types = module.wasi_http_types
                self._outgoing_handler = module.outgoing_handler
                self._poll = module.poll
                self._streams = module.streams
                self._io_error = module.error
                self._loaded = True
                return
            except (ImportError, AttributeError) as e:
                raise ImportError(f"Could not load WASI bindings from {custom_module}: {e}")
        
        # If we get here, we couldn't find the bindings
        raise ImportError(
            "Cannot find WASI HTTP bindings. "
            "Make sure you're running in a componentize-py environment. "
            "You can also set WASI_HTTP_BINDINGS_MODULE environment variable."
        )
    
    @property
    def http_types(self):
        self._ensure_loaded()
        return self._http_types
    
    @property
    def outgoing_handler(self):
        self._ensure_loaded()
        return self._outgoing_handler
    
    @property
    def poll(self):
        self._ensure_loaded()
        return self._poll
    
    @property
    def streams(self):
        self._ensure_loaded()
        return self._streams
    
    @property
    def io_error(self):
        self._ensure_loaded()
        return self._io_error


# Global instance
bindings = WasiBindings()