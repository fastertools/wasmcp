// Code generated by wit-bindgen-go. DO NOT EDIT.

package handler

import (
	"go.bytecodealliance.org/cm"
)

// This file contains wasmimport and wasmexport declarations for "wasmcp:mcp@0.1.0".

//go:wasmexport wasmcp:mcp/handler@0.1.0#list-tools
//export wasmcp:mcp/handler@0.1.0#list-tools
func wasmexport_ListTools() (result *cm.List[Tool]) {
	result_ := Exports.ListTools()
	result = &result_
	return
}

//go:wasmexport wasmcp:mcp/handler@0.1.0#call-tool
//export wasmcp:mcp/handler@0.1.0#call-tool
func wasmexport_CallTool(name0 *uint8, name1 uint32, arguments0 *uint8, arguments1 uint32) (result *ToolResult) {
	name := cm.LiftString[string]((*uint8)(name0), (uint32)(name1))
	arguments := cm.LiftString[string]((*uint8)(arguments0), (uint32)(arguments1))
	result_ := Exports.CallTool(name, arguments)
	result = &result_
	return
}

//go:wasmexport wasmcp:mcp/handler@0.1.0#list-resources
//export wasmcp:mcp/handler@0.1.0#list-resources
func wasmexport_ListResources() (result *cm.List[ResourceInfo]) {
	result_ := Exports.ListResources()
	result = &result_
	return
}

//go:wasmexport wasmcp:mcp/handler@0.1.0#read-resource
//export wasmcp:mcp/handler@0.1.0#read-resource
func wasmexport_ReadResource(uri0 *uint8, uri1 uint32) (result *ResourceResult) {
	uri := cm.LiftString[string]((*uint8)(uri0), (uint32)(uri1))
	result_ := Exports.ReadResource(uri)
	result = &result_
	return
}

//go:wasmexport wasmcp:mcp/handler@0.1.0#list-prompts
//export wasmcp:mcp/handler@0.1.0#list-prompts
func wasmexport_ListPrompts() (result *cm.List[Prompt]) {
	result_ := Exports.ListPrompts()
	result = &result_
	return
}

//go:wasmexport wasmcp:mcp/handler@0.1.0#get-prompt
//export wasmcp:mcp/handler@0.1.0#get-prompt
func wasmexport_GetPrompt(name0 *uint8, name1 uint32, arguments0 *uint8, arguments1 uint32) (result *PromptResult) {
	name := cm.LiftString[string]((*uint8)(name0), (uint32)(name1))
	arguments := cm.LiftString[string]((*uint8)(arguments0), (uint32)(arguments1))
	result_ := Exports.GetPrompt(name, arguments)
	result = &result_
	return
}
