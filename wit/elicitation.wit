/// Interactive elicitation types for MCP (CLIENT CAPABILITY)
/// 
/// NOTE: This is a CLIENT capability - servers request user input, clients provide it.
/// Only type definitions are provided here, no function interfaces, as:
/// 1. No real MCP client implementations exist yet
/// 2. Client capability interfaces are likely to change in future MCP spec versions
/// 3. The exact client-side implementation patterns are still being established
///
/// These types enable protocol-compliant marshaling while avoiding premature
/// interface definitions for capabilities that don't have reference implementations.

/// Type definitions for elicitation
interface elicitation-types {
    use types.{json-schema, json-value, meta-fields};

    /// Request for structured user input
    record elicit-request {
        /// Message to display to the user
        message: string,
        /// JSON Schema defining the expected data structure
        /// Properties should use primitive types only (no nesting)
        schema: json-schema,
        /// Extension metadata
        meta: option<meta-fields>,
    }

    /// User's response to an elicitation request
    record elicit-result {
        /// Action the user took
        action: elicit-action,
        /// Data provided by the user (if action was accept)
        data: option<json-value>,
        /// Optional message from the user
        message: option<string>,
        /// Extension metadata
        meta: option<meta-fields>,
    }

    /// Possible user actions in response to elicitation
    enum elicit-action {
        /// User submitted the form with data
        accept,
        /// User explicitly declined to provide data
        decline,
        /// User cancelled without making a choice
        cancel,
    }
}