package fastertools:mcp@0.1.19;

/// World definitions for MCP transports and capabilities
/// 
/// This file defines paired worlds for different capability combinations:
/// - Each transport world has a corresponding provider world
/// - Transports import the capabilities they support
/// - Providers export the capabilities they implement
/// - This allows providers to only implement what they need

// === TOOLS ONLY ===

/// Minimal transport with just tools
world tools-transport {
    // Core types always needed
    import types;
    import session;
    import notifications;
    
    // Core capabilities for session management (includes optional auth config)
    import core-capabilities;
    
    // Tool-specific types and capabilities
    import tools;
    import tools-capabilities;
}

world tools-provider {
    export core-capabilities;
    export tools-capabilities;
}

// === TOOLS + RESOURCES ===

/// Transport with tools and resources
world tools-resources-transport {
    // Core types always needed
    import types;
    import session;
    import notifications;
    
    // Core capabilities for session management (includes optional auth config)
    import core-capabilities;
    
    // Feature-specific types and capabilities
    import tools;
    import tools-capabilities;
    import resources;
    import resources-capabilities;
}

world tools-resources-provider {
    export core-capabilities;
    export tools-capabilities;
    export resources-capabilities;
}

// === TOOLS + RESOURCES + PROMPTS ===

world tools-resources-prompts-transport {
    // Core types always needed
    import types;
    import session;
    import notifications;
    
    // Core capabilities for session management (includes optional auth config)
    import core-capabilities;
    
    // Feature-specific types and capabilities
    import tools;
    import tools-capabilities;
    import resources;
    import resources-capabilities;
    import prompts;
    import prompts-capabilities;
}

world tools-resources-prompts-provider {
    export core-capabilities;
    export tools-capabilities;
    export resources-capabilities;
    export prompts-capabilities;
}

// === FULL CAPABILITIES ===

/// Full transport with all capabilities
world full-transport {
    // Core types always needed
    import types;
    import session;
    import notifications;
    
    // Core capabilities for session management (includes optional auth config)
    import core-capabilities;
    
    // All feature-specific types
    import tools;
    import resources;
    import prompts;
    import sampling;
    import elicitation;
    import roots;
    import completion;
    
    // Import all capabilities
    import tools-capabilities;
    import resources-capabilities;
    import prompts-capabilities;
    import sampling-capabilities;
    import elicitation-capabilities;
    import roots-capabilities;
    import completion-capabilities;
}

world full-provider {
    export core-capabilities;
    export tools-capabilities;
    export resources-capabilities;
    export prompts-capabilities;
    export sampling-capabilities;
    export elicitation-capabilities;
    export roots-capabilities;
    export completion-capabilities;
}

// === CLIENT WORLD ===

/// World for MCP clients that consume transport capabilities
world mcp-client {
    /// Client exports these capabilities for transports to use
    export sampling;
    export elicitation;
    export roots;
    export completion;
    
    /// Client imports transport capabilities
    import tools;
    import resources;
    import prompts;
    
    /// Client handles notifications
    export notifications;
}

// === AUTHORIZATION WORLDS ===

/// Authorization provider world
world authorization-provider {
    // Import types needed for authorization
    import types;
    
    // Export all authorization interfaces
    export authorization;
    export jwt-validator;
    export policy-engine;
    export oauth-discovery;
    export mcp-authorization;
}
