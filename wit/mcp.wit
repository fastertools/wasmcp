package fastertools:mcp@0.2.0;

/// World definitions for MCP transports and capabilities
/// 
/// This file defines paired worlds for different capability combinations:
/// - Each transport world has a corresponding provider world
/// - Transports import the capabilities they support
/// - Providers export the capabilities they implement
/// - This allows providers to only implement what they need

// === TOOLS ONLY ===

/// Minimal transport with just tools
world tools-transport {
    // Core types always needed
    import types;
    import core-types;
    import notification-types;
    
    // Core capabilities for session management (includes optional auth config)
    import core-capabilities;
    
    // Tool-specific types and capabilities
    import tool-types;
    import tools-capabilities;
}

world tools-provider {
    export core-capabilities;
    export tools-capabilities;
}

// === TOOLS + RESOURCES ===

/// Transport with tools and resources
world tools-resources-transport {
    // Core types always needed
    import types;
    import core-types;
    import notification-types;
    
    // Core capabilities for session management (includes optional auth config)
    import core-capabilities;
    
    // Feature-specific types and capabilities
    import tool-types;
    import tools-capabilities;
    import resource-types;
    import resources-capabilities;
}

world tools-resources-provider {
    export core-capabilities;
    export tools-capabilities;
    export resources-capabilities;
}

// === TOOLS + RESOURCES + PROMPTS ===

world tools-resources-prompts-transport {
    // Core types always needed
    import types;
    import core-types;
    import notification-types;
    
    // Core capabilities for session management (includes optional auth config)
    import core-capabilities;
    
    // Feature-specific types and capabilities
    import tool-types;
    import tools-capabilities;
    import resource-types;
    import resources-capabilities;
    import prompt-types;
    import prompts-capabilities;
}

world tools-resources-prompts-provider {
    export core-capabilities;
    export tools-capabilities;
    export resources-capabilities;
    export prompts-capabilities;
}

// === FULL CAPABILITIES ===

/// Full transport with all server capabilities
world full-transport {
    // Core types always needed
    import types;
    import core-types;
    import notification-types;
    
    // Core capabilities for session management (includes optional auth config)
    import core-capabilities;
    
    // Server capability types
    import tool-types;
    import resource-types;
    import prompt-types;
    import completion-types;
    
    // Client capability types (for protocol marshaling only)
    import sampling-types;
    import elicitation-types;
    import roots-types;
    
    // Import server capabilities
    import tools-capabilities;
    import resources-capabilities;
    import prompts-capabilities;
    import completion-capabilities;
}

world full-provider {
    export core-capabilities;
    export tools-capabilities;
    export resources-capabilities;
    export prompts-capabilities;
    export completion-capabilities;
}