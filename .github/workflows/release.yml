name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-wasip1
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install cargo-binstall
      uses: cargo-bins/cargo-binstall@main
    
    - name: Install tools
      run: make install-rust-tools
    
    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    # Build all components
    - name: Build all components
      run: make build-all
    
    - name: Get versions
      id: versions
      run: |
        echo "gateway=$(make get-gateway-version)" >> $GITHUB_OUTPUT
        echo "rust_sdk=$(make get-rust-sdk-version)" >> $GITHUB_OUTPUT
        echo "ts_sdk=$(make get-ts-sdk-version)" >> $GITHUB_OUTPUT
    
    - name: Login to GitHub Container Registry
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | wkg login ghcr.io -u ${{ github.actor }} --password-stdin
    
    - name: Publish mcp-http-component to GitHub Container Registry
      run: make publish-gateway
    
    # Publish ftl-sdk-rust to crates.io
    - name: Publish ftl-sdk-rust to crates.io
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
      run: |
        make publish-rust-sdk-dry
        make publish-rust-sdk
    
    # Publish ftl-sdk-typescript to npm
    - name: Setup TypeScript SDK
      run: make install-ts-deps
    
    - name: Publish ftl-sdk-typescript to npm
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: |
        make publish-ts-sdk-dry
        make publish-ts-sdk
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        name: Release ${{ github.ref_name }}
        generate_release_notes: true
        files: |
          src/mcp-http-component/target/wasm32-wasip1/release/mcp_http_component.wasm
        body: |
          ## Published Packages
          
          ### WebAssembly Component
          Use the published component in your `spin.toml`:
          
          ```toml
          [component.mcp-gateway]
          source = { registry = "ghcr.io", package = "bowlofarugula:mcp-http-component", version = "${{ steps.versions.outputs.gateway }}" }
          ```
          
          ### Rust SDK
          Add to your `Cargo.toml`:
          ```toml
          [dependencies]
          ftl-sdk = "${{ steps.versions.outputs.rust_sdk }}"
          ```
          
          ### TypeScript SDK
          Install via npm:
          ```bash
          npm install @fastertools/ftl-sdk@${{ steps.versions.outputs.ts_sdk }}
          ```