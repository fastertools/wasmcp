name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-wasip1
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install tools
      run: |
        cargo install cargo-component --locked
        cargo install wkg --locked
    
    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    # Build and publish mcp-http-component
    - name: Build mcp-http-component
      working-directory: src/mcp-http-component
      run: cargo component build --release
    
    - name: Get version from Cargo.toml
      id: version
      working-directory: src/mcp-http-component
      run: |
        VERSION=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].version')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Login to GitHub Container Registry
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | wkg login ghcr.io -u ${{ github.actor }} --password-stdin
    
    - name: Publish mcp-http-component to GitHub Container Registry
      working-directory: src/mcp-http-component
      run: |
        wkg oci push ghcr.io/bowlofarugula/mcp-http-component:${{ steps.version.outputs.version }} \
          target/wasm32-wasip1/release/mcp_http_component.wasm
        
        # Also push latest tag
        wkg oci push ghcr.io/bowlofarugula/mcp-http-component:latest \
          target/wasm32-wasip1/release/mcp_http_component.wasm
    
    # Publish ftl-sdk-rust to crates.io
    - name: Publish ftl-sdk-rust to crates.io
      working-directory: src/ftl-sdk-rust
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
      run: |
        cargo publish --dry-run
        cargo publish
    
    # Publish ftl-sdk-typescript to npm
    - name: Install TypeScript SDK dependencies
      working-directory: src/ftl-sdk-typescript
      run: npm ci
    
    - name: Build TypeScript SDK
      working-directory: src/ftl-sdk-typescript
      run: npm run build
    
    - name: Publish ftl-sdk-typescript to npm
      working-directory: src/ftl-sdk-typescript
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: |
        npm publish --dry-run
        npm publish --access public
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        name: Release ${{ github.ref_name }}
        generate_release_notes: true
        files: |
          src/mcp-http-component/target/wasm32-wasip1/release/mcp_http_component.wasm
        body: |
          ## Published Packages
          
          ### WebAssembly Component
          Use the published component in your `spin.toml`:
          
          ```toml
          [component.mcp-gateway]
          source = { registry = "ghcr.io", package = "bowlofarugula:mcp-http-component", version = "${{ steps.version.outputs.version }}" }
          ```
          
          ### Rust SDK
          Add to your `Cargo.toml`:
          ```toml
          [dependencies]
          ftl-sdk = "0.2.0"
          ```
          
          ### TypeScript SDK
          Install via npm:
          ```bash
          npm install @fastertools/ftl-sdk
          ```