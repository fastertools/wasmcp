package fastertools:mcp@0.1.0;

/// Main handler interface that MCP implementations must provide

interface handler {
    use types.{mcp-error};
    use session.{initialize-request, initialize-response};
    use tools.{list-tools-request, list-tools-response, call-tool-request, tool-result};
    use resources.{list-resources-request, list-resources-response, list-templates-request, 
                    list-templates-response, read-resource-request, read-resource-response,
                    subscribe-request, unsubscribe-request};
    use prompts.{list-prompts-request, list-prompts-response, get-prompt-request, get-prompt-response};
    
    /// Core handler functions that implementations must provide
    
    /// Handle session initialization
    handle-initialize: func(request: initialize-request) -> result<initialize-response, mcp-error>;
    
    /// Handle initialization complete notification
    handle-initialized: func() -> result<_, mcp-error>;
    
    /// Handle ping request
    handle-ping: func() -> result<_, mcp-error>;
    
    /// Handle shutdown request
    handle-shutdown: func() -> result<_, mcp-error>;
    
    /// Tool operations
    handle-list-tools: func(request: list-tools-request) -> result<list-tools-response, mcp-error>;
    handle-call-tool: func(request: call-tool-request) -> result<tool-result, mcp-error>;
    
    /// Resource operations
    handle-list-resources: func(request: list-resources-request) -> result<list-resources-response, mcp-error>;
    handle-list-resource-templates: func(request: list-templates-request) -> result<list-templates-response, mcp-error>;
    handle-read-resource: func(request: read-resource-request) -> result<read-resource-response, mcp-error>;
    handle-subscribe-resource: func(request: subscribe-request) -> result<_, mcp-error>;
    handle-unsubscribe-resource: func(request: unsubscribe-request) -> result<_, mcp-error>;
    
    /// Prompt operations
    handle-list-prompts: func(request: list-prompts-request) -> result<list-prompts-response, mcp-error>;
    handle-get-prompt: func(request: get-prompt-request) -> result<get-prompt-response, mcp-error>;
}
